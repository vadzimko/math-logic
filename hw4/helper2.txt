const string A_B_IMPL[] = {
            "(->,B,(->,A,B))",
            "B",
            "(->,A,B)",
    };

    const string notA_B_IMPL[] = {
            "(->,B,(->,A,B))",
            "B",
            "(->,A,B)",
    };

    const string notA_notB_IMPL[] = {
            "(A)",
            "(->,A,(->,(B),A))",
            "(->,(->,(A),(->,(B),(A))),(->,A,(->,(A),(->,(B),(A)))))",
            "(->,(A),(->,(B),(A)))",
            "(->,A,(->,(A),(->,(B),(A))))",
            "(->,(A),(->,A,(A)))",
            "(->,A,(A))",
            "(->,(->,A,(A)),(->,(->,A,(->,(A),(->,(B),(A)))),(->,A,(->,(B),(A)))))",
            "(->,(->,A,(->,(A),(->,(B),(A)))),(->,A,(->,(B),(A))))",
            "(->,A,(->,(B),(A)))",
            "(->,(->,(->,(B),A),(->,(->,(B),(A)),(!(B)))),(->,A,(->,(->,(B),A),(->,(->,(B),(A)),(!(B))))))",
            "(->,(->,(B),A),(->,(->,(B),(A)),(!(B))))",
            "(->,A,(->,(->,(B),A),(->,(->,(B),(A)),(!(B)))))",
            "(->,(->,A,(->,(B),A)),(->,(->,A,(->,(->,(B),A),(->,(->,(B),(A)),(!(B))))),(->,A,(->,(->,(B),(A)),(!(B))))))",
            "(->,(->,A,(->,(->,(B),A),(->,(->,(B),(A)),(!(B))))),(->,A,(->,(->,(B),(A)),(!(B)))))",
            "(->,A,(->,(->,(B),(A)),(!(B))))",
            "(->,(->,A,(->,(B),(A))),(->,(->,A,(->,(->,(B),(A)),(!(B)))),(->,A,(!(B)))))",
            "(->,(->,A,(->,(->,(B),(A)),(!(B)))),(->,A,(!(B))))",
            "(->,A,(!(B)))",
            "(->,(->,(!(B)),B),(->,A,(->,(!(B)),B)))",
            "(->,(!(B)),B)",
            "(->,A,(->,(!(B)),B))",
            "(->,(->,A,(!(B))),(->,(->,A,(->,(!(B)),B)),(->,A,B)))",
            "(->,(->,A,(->,(!(B)),B)),(->,A,B))",
            "(->,A,B)",
    };

    const string A_notB_notIMPL[] = {
            "A",
            "(B)",
            "(->,(->,A,B),(->,(->,(->,A,B),(->,A,B)),(->,A,B)))",
            "(->,(->,A,B),(->,(->,A,B),(->,A,B)))",
            "(->,(->,(->,A,B),(->,(->,A,B),(->,A,B))),(->,(->,(->,A,B),(->,(->,(->,A,B),(->,A,B)),(->,A,B))),(->,(->,A,B),(->,A,B))))",
            "(->,(->,(->,A,B),(->,(->,(->,A,B),(->,A,B)),(->,A,B))),(->,(->,A,B),(->,A,B)))",
            "(->,(->,A,B),(->,A,B))",
            "(->,A,(->,(->,A,B),A))",
            "(->,(->,A,B),A)",
            "(->,(->,(->,A,B),A),(->,(->,(->,A,B),(->,A,B)),(->,(->,A,B),B)))",
            "(->,(->,(->,A,B),(->,A,B)),(->,(->,A,B),B))",
            "(->,(->,A,B),B)",
            "(->,(->,(B),(->,(->,A,B),(B))),(->,(->,(->,A,B),B),(->,(B),(->,(->,A,B),(B)))))",
            "(->,(B),(->,(->,A,B),(B)))",
            "(->,(->,(->,A,B),B),(->,(B),(->,(->,A,B),(B))))",
            "(->,(->,(->,A,B),B),(->,(B),(->,(->,A,B),B)))",
            "(->,(->,(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))),(->,(->,(->,A,B),B),(->,(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))))",
            "(->,(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))",
            "(->,(->,(->,A,B),B),(->,(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))))",
            "(->,(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(->,(->,A,B),B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))",
            "(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))",
            "(->,(->,(->,A,B),B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))",
            "(->,(->,(->,(->,A,B),B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(->,(->,(->,A,B),B),(->,(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))),(->,(->,(->,A,B),B),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))))",
            "(->,(->,(->,(->,A,B),B),(->,(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))),(->,(->,(->,A,B),B),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))))",
            "(->,(->,(->,A,B),B),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))",
            "(->,(->,(->,(B),(->,(->,A,B),B)),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))),(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,A,B),B)),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))))",
            "(->,(->,(B),(->,(->,A,B),B)),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))",
            "(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,A,B),B)),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))))",
            "(->,(->,(->,(->,A,B),B),(->,(B),(->,(->,A,B),B))),(->,(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,A,B),B)),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))),(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))))",
            "(->,(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,A,B),B)),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))),(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))))",
            "(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))",
            "(->,(->,(->,(->,A,B),B),(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))),(->,(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))),(->,(->,(->,A,B),B),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))))",
            "(->,(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))),(->,(->,(->,A,B),B),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B))))))",
            "(->,(->,(->,A,B),B),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))))",
            "(->,(->,(->,(B),(->,(->,A,B),(B))),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B))))),(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,A,B),(B))),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B)))))))",
            "(->,(->,(B),(->,(->,A,B),(B))),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B)))))",
            "(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,A,B),(B))),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B))))))",
            "(->,(->,(->,(->,A,B),B),(->,(B),(->,(->,A,B),(B)))),(->,(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,A,B),(B))),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B)))))),(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B)))))))",
            "(->,(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,A,B),(B))),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B)))))),(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B))))))",
            "(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B)))))",
            "(->,(->,(->,(->,A,B),B),(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B))))),(->,(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B))))),(->,(->,(->,A,B),B),(->,(B),(!(->,A,B))))))",
            "(->,(->,(->,(->,A,B),B),(->,(->,(B),(->,(->,(->,A,B),(B)),(!(->,A,B)))),(->,(B),(!(->,A,B))))),(->,(->,(->,A,B),B),(->,(B),(!(->,A,B)))))",
            "(->,(->,(->,A,B),B),(->,(B),(!(->,A,B))))",
            "(->,(B),(!(->,A,B)))",
            "(!(->,A,B))",
    };

    const string A_B_AND[] = {
            "A",
            "B",
            "(->,A,(->,B,(&,A,B)))",
            "(->,B,(&,A,B))",
            "(&,A,B)",
    };

    const string A_notB_notAND[] = {
            "(B)",
            "(->,(&,A,B),B)",
            "(->,(B),(->,(&,A,B),(B)))",
            "(->,(&,A,B),(B))",
            "(->,(->,(&,A,B),B),(->,(->,(&,A,B),(B)),(!(&,A,B))))",
            "(->,(->,(&,A,B),(B)),(!(&,A,B)))",
            "(!(&,A,B))",
    };

    const string notA_B_notAND[] = {
            "(A)",
            "(->,(&,A,B),A)",
            "(->,(A),(->,(&,A,B),(A)))",
            "(->,(&,A,B),(A))",
            "(->,(->,(&,A,B),A),(->,(->,(&,A,B),(A)),(!(&,A,B))))",
            "(->,(->,(&,A,B),(A)),(!(&,A,B)))",
            "(!(&,A,B))",
    };

    const string notA_notB_notAND[] = {
            "(A)",
            "(->,(&,A,B),A)",
            "(->,(A),(->,(&,A,B),(A)))",
            "(->,(&,A,B),(A))",
            "(->,(->,(&,A,B),A),(->,(->,(&,A,B),(A)),(!(&,A,B))))",
            "(->,(->,(&,A,B),(A)),(!(&,A,B)))",
            "(!(&,A,B))",
    };

    const string A_B_OR[] = {
            "(->,A,(|,A,B))",
            "A",
            "(|,A,B)",
    };

    const string notA_B_OR[] = {
            "(->,B,(|,A,B))",
            "B",
            "(|,A,B)",
    };

    const string A_notB_OR[] = {
            "(->,A,(|,A,B))",
            "A",
            "(|,A,B)",
    };

    const string notA_notB_notOR[] = {
            "(A)",
            "(B)",
            "(->,(->,(A),(->,(B),(A))),(->,A,(->,(A),(->,(B),(A)))))",
            "(->,(A),(->,(B),(A)))",
            "(->,A,(->,(A),(->,(B),(A))))",
            "(->,(A),(->,A,(A)))",
            "(->,A,(A))",
            "(->,(->,A,(A)),(->,(->,A,(->,(A),(->,(B),(A)))),(->,A,(->,(B),(A)))))",
            "(->,(->,A,(->,(A),(->,(B),(A)))),(->,A,(->,(B),(A))))",
            "(->,A,(->,(B),(A)))",
            "(->,A,(->,(B),A))",
            "(->,(->,(->,(B),A),(->,(->,(B),(A)),(!(B)))),(->,A,(->,(->,(B),A),(->,(->,(B),(A)),(!(B))))))",
            "(->,(->,(B),A),(->,(->,(B),(A)),(!(B))))",
            "(->,A,(->,(->,(B),A),(->,(->,(B),(A)),(!(B)))))",
            "(->,(->,A,(->,(B),A)),(->,(->,A,(->,(->,(B),A),(->,(->,(B),(A)),(!(B))))),(->,A,(->,(->,(B),(A)),(!(B))))))",
            "(->,(->,A,(->,(->,(B),A),(->,(->,(B),(A)),(!(B))))),(->,A,(->,(->,(B),(A)),(!(B)))))",
            "(->,A,(->,(->,(B),(A)),(!(B))))",
            "(->,(->,A,(->,(B),(A))),(->,(->,A,(->,(->,(B),(A)),(!(B)))),(->,A,(!(B)))))",
            "(->,(->,A,(->,(->,(B),(A)),(!(B)))),(->,A,(!(B))))",
            "(->,A,(!(B)))",
            "(->,(->,(!(B)),B),(->,A,(->,(!(B)),B)))",
            "(->,(!(B)),B)",
            "(->,A,(->,(!(B)),B))",
            "(->,(->,A,(!(B))),(->,(->,A,(->,(!(B)),B)),(->,A,B)))",
            "(->,(->,A,(->,(!(B)),B)),(->,A,B))",
            "(->,A,B)",
            "(->,B,(->,(->,B,B),B))",
            "(->,B,(->,B,B))",
            "(->,(->,B,(->,B,B)),(->,(->,B,(->,(->,B,B),B)),(->,B,B)))",
            "(->,(->,B,(->,(->,B,B),B)),(->,B,B))",
            "(->,B,B)",
            "(->,(->,A,B),(->,(->,B,B),(->,(|,A,B),B)))",
            "(->,(->,B,B),(->,(|,A,B),B))",
            "(->,(|,A,B),B)",
            "(->,(B),(->,(|,A,B),(B)))",
            "(->,(|,A,B),(B))",
            "(->,(->,(|,A,B),B),(->,(->,(|,A,B),(B)),(!(|,A,B))))",
            "(->,(->,(|,A,B),(B)),(!(|,A,B)))",
            "(!(|,A,B))",
    };
